#define LED 3
#define BOMBA 12
#define HUMEDAD A3
#define PASOSY 4
#define DIRECCIONY 7
#define FINALDECARRERAY 11
#define HABILITARMOTORES 8
#define PASOSX 2
#define DIRECCIONX 5
#define FINALDECARRERAX 9

void setup()
{
  pinMode(BOMBA, OUTPUT);
  digitalWrite(BOMBA, LOW); // PROTECCIÓN DE LA BOMBA
  pinMode(HUMEDAD, INPUT);
  //pinMode(LED, OUTPUT);
  Serial.begin(9600);
  pinMode(PASOSY, OUTPUT),
  pinMode(DIRECCIONY, OUTPUT);
  pinMode(FINALDECARRERAY, INPUT);
  pinMode(HABILITARMOTORES, OUTPUT);
  pinMode(PASOSX, OUTPUT),
  pinMode(DIRECCIONX, OUTPUT);
  pinMode(FINALDECARRERAX, INPUT);
}

void loop()
{

int LecturaDeHumedad = analogRead(HUMEDAD);
Serial.print("VALOR DE HUMEDAD:");
Serial.println(LecturaDeHumedad);
delay(500);

}

void HomeMotorY()
{
 digitalWrite(DIRECCIONY, LOW);
   while (digitalRead(FINALDECARRERAY) == 1)
  {
    digitalWrite(PASOSY, HIGH);
    delay(1);
    digitalWrite(PASOSY, LOW);
    delay(1);
  }
}


void BajarMotorY ()
{
  const float  RECORRIDA_EN_CM= 10; // la palabra constante, me permite, MODIFICAR SOLO EN CASO QUE DEBA CAMBIARSE
const int    PASOS_A_CM= 500; //prestar atención con los nombres de las variables , llamarlas en mayúsculas
const int PASOS_A_BAJAR= PASOS_A_CM * RECORRIDA_EN_CM;
digitalWrite(DIRECCIONY, HIGH);
for(int i=0;PASOS_A_BAJAR; i++){
digitalWrite (PASOSY,HIGH);
delay (1);
digitalWrite (PASOSY,LOW);
delay(1);
}

bool ChequearSeco()
{
int LecturaDeHumedad = analogRead(HUMEDAD);
int HUMEDADOPTIMA=279;
if (LecturaDeHumedad < HUMEDADOPTIMA)
 {
return true;
digitalWrite( BOMBA, HIGH);

 }
else
 {
return false;
digitalWrite( BOMBA, LOW);
 }
}


/*void HomeMotorX()
{
  digitalWrite(DIRECCIONX, LOW);
   while (digitalRead(FINALDECARRERAX) == 1)
  {
    digitalWrite(PASOSX, HIGH);
    delay(1);
    digitalWrite(PASOSX, LOW);
    delay(1);
  }
}
*/
